{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport $fetch from \"../utils/fetch\";\nimport getEnv from \"../constants/ENV\";\nvar _getEnv = getEnv(),\n  apiUrl = _getEnv.api,\n  _getEnv$customerId = _getEnv.customerId,\n  customerId = _getEnv$customerId === void 0 ? '' : _getEnv$customerId,\n  hostUrl = _getEnv.host,\n  billbearApi = _getEnv.billbearApi;\nvar Models = {\n  banner: {\n    api: '/app/banner'\n  },\n  category: {\n    api: '/app/category'\n  },\n  diamond: {\n    api: '/app/diamond'\n  },\n  waterfall: {\n    api: '/app/fall'\n  },\n  nav: {\n    api: '/app/nav'\n  },\n  getUserInfo: {\n    api: 'api/authCenter/user/info',\n    isHostUrl: true\n  },\n  getCurrentMemberMobile: {\n    api: 'usercenter/admin/member/getCurrentMemberMobile',\n    isBillbearApi: true\n  },\n  advert: {\n    api: '/app/advert'\n  }\n};\nexport default function (modelName) {\n  var config = Models[modelName];\n  var url = (config.isHostUrl ? hostUrl : apiUrl) + config.api + \"?_t=\" + Date.now();\n  if (config.isHostUrl) {\n    url = hostUrl;\n  } else if (config.isBillbearApi) {\n    url = billbearApi;\n  } else {\n    url = apiUrl;\n  }\n  url += config.api + \"?_t=\" + Date.now();\n  console.log(\"===api send===\", url);\n  return {\n    send: function send() {\n      var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return $fetch(url, _objectSpread({\n        customerId: customerId\n      }, body), options);\n    }\n  };\n}","map":{"version":3,"names":["$fetch","getEnv","apiUrl","api","customerId","hostUrl","host","billbearApi","Models","banner","category","diamond","waterfall","nav","getUserInfo","isHostUrl","getCurrentMemberMobile","isBillbearApi","advert","modelName","config","url","Date","now","console","log","send","body","options"],"sources":["/Users/yori/Documents/project/gucci/models/index.ts"],"sourcesContent":["/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport $fetch from '../utils/fetch';\nimport getEnv from '../constants/ENV'\nimport Utils from '../utils/'\n\nconst {api: apiUrl, customerId='', host: hostUrl, billbearApi} = getEnv();\n\nconst Models = {\n  // querySceneConfig: {\n  //   api: \"newmall-client/client/sceneConfig/query\"\n  // },\n  // queryLocation: {\n  //   api: \"newmall-client/client/sceneConfig/queryLocation\"\n  // },\n  // queryHotGoods: {\n  //   api: \"newmall-client/client/sceneConfig/queryHotGoods\"\n  // }\n  banner: {\n    api: '/app/banner'\n  },\n  category: {\n    api: '/app/category'\n  },\n  diamond: {\n    api: '/app/diamond'\n  },\n  waterfall: {\n    api: '/app/fall'\n  },\n  nav: {\n    api: '/app/nav'\n  },\n  getUserInfo: {\n    api: 'api/authCenter/user/info',\n    isHostUrl: true\n  },\n  getCurrentMemberMobile:{\n    api: 'usercenter/admin/member/getCurrentMemberMobile',\n    isBillbearApi: true\n  },\n  advert: {\n    api: '/app/advert'\n  }\n}\n\nexport default function(modelName){\n  const config = Models[modelName];\n  let url = (config.isHostUrl? hostUrl : apiUrl) + config.api + \"?_t=\" + Date.now();\n\n  if(config.isHostUrl){\n    url = hostUrl;\n  }else if(config.isBillbearApi){\n    url = billbearApi  \n  }else{\n    url = apiUrl;\n  }\n\n  url += config.api + \"?_t=\" + Date.now();\n  \n  console.log(\"===api send===\", url);\n  return {\n    send:(body = {}, options = {})=>{\n      return $fetch(url, {\n        customerId,\n        ...body\n      }, options)\n    }\n  }\n}\n"],"mappings":";;;AAMA,OAAOA,MAAM;AACb,OAAOC,MAAM;AAGb,cAAiEA,MAAM,EAAE;EAA7DC,MAAM,WAAXC,GAAG;EAAA,6BAAUC,UAAU;EAAVA,UAAU,mCAAC,EAAE;EAAQC,OAAO,WAAbC,IAAI;EAAWC,WAAW,WAAXA,WAAW;AAE7D,IAAMC,MAAM,GAAG;EAUbC,MAAM,EAAE;IACNN,GAAG,EAAE;EACP,CAAC;EACDO,QAAQ,EAAE;IACRP,GAAG,EAAE;EACP,CAAC;EACDQ,OAAO,EAAE;IACPR,GAAG,EAAE;EACP,CAAC;EACDS,SAAS,EAAE;IACTT,GAAG,EAAE;EACP,CAAC;EACDU,GAAG,EAAE;IACHV,GAAG,EAAE;EACP,CAAC;EACDW,WAAW,EAAE;IACXX,GAAG,EAAE,0BAA0B;IAC/BY,SAAS,EAAE;EACb,CAAC;EACDC,sBAAsB,EAAC;IACrBb,GAAG,EAAE,gDAAgD;IACrDc,aAAa,EAAE;EACjB,CAAC;EACDC,MAAM,EAAE;IACNf,GAAG,EAAE;EACP;AACF,CAAC;AAED,eAAe,UAASgB,SAAS,EAAC;EAChC,IAAMC,MAAM,GAAGZ,MAAM,CAACW,SAAS,CAAC;EAChC,IAAIE,GAAG,GAAG,CAACD,MAAM,CAACL,SAAS,GAAEV,OAAO,GAAGH,MAAM,IAAIkB,MAAM,CAACjB,GAAG,GAAG,MAAM,GAAGmB,IAAI,CAACC,GAAG,EAAE;EAEjF,IAAGH,MAAM,CAACL,SAAS,EAAC;IAClBM,GAAG,GAAGhB,OAAO;EACf,CAAC,MAAK,IAAGe,MAAM,CAACH,aAAa,EAAC;IAC5BI,GAAG,GAAGd,WAAW;EACnB,CAAC,MAAI;IACHc,GAAG,GAAGnB,MAAM;EACd;EAEAmB,GAAG,IAAID,MAAM,CAACjB,GAAG,GAAG,MAAM,GAAGmB,IAAI,CAACC,GAAG,EAAE;EAEvCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,GAAG,CAAC;EAClC,OAAO;IACLK,IAAI,EAAC,gBAA2B;MAAA,IAA1BC,IAAI,uEAAG,CAAC,CAAC;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAC3B,OAAO5B,MAAM,CAACqB,GAAG;QACfjB,UAAU,EAAVA;MAAU,GACPuB,IAAI,GACNC,OAAO,CAAC;IACb;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\"],\n  _excluded2 = [\"visible\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var _Screens, _Screens$screensEnabl;\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if ((_Screens = Screens) !== null && _Screens !== void 0 && (_Screens$screensEnabl = _Screens.screensEnabled) !== null && _Screens$screensEnabl !== void 0 && _Screens$screensEnabl.call(_Screens)) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};\nexport function MaybeScreen(_ref2) {\n  var _Screens2, _Screens2$screensEnab;\n  var visible = _ref2.visible,\n    children = _ref2.children,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  if ((_Screens2 = Screens) !== null && _Screens2 !== void 0 && (_Screens2$screensEnab = _Screens2.screensEnabled) !== null && _Screens2$screensEnab !== void 0 && _Screens2$screensEnab.call(_Screens2)) {\n    return React.createElement(Screens.Screen, _extends({\n      activityState: visible ? 2 : 0\n    }, rest), children);\n  }\n  return React.createElement(ResourceSavingView, _extends({\n    visible: visible\n  }, rest), children);\n}","map":{"version":3,"sources":["views/ScreenFallback.tsx"],"names":["ResourceSavingView","React","Screens","require","e","MaybeScreenContainer","enabled","rest","screensEnabled","MaybeScreen","visible","children"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,kBAAkB,QAAQ,4BAA4B;AAC/D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA;AAW9B,IAAIC,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CACV;AAGF,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAG,IAAA,EAO9B;EAAA,IAAA,QAAA,EAAA,qBAAA;EAP+B,IACnCC,OAAO,GAMR,IAAA,CANCA,OAAO;IACJC,IAAAA,4BAKJ,IAAA;EACC,IAAA,CAAA,QAAA,GAAIL,OAAO,MAAA,IAAA,IAAA,QAAA,KAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,GAAPA,QAAAA,CAASM,cAAc,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAAvBN,qBAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAA2B,EAAE;IAC/B,OAAO,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,eAAe,EAAA,QAAA,CAAA;MAAC,OAAO,EAAEI;IAAQ,CAAA,EAAKC,IAAI,CAAA,CAAI;EAChE;EAEA,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,EAAKA,IAAI,CAAI;AAC3B,CAAC;AAED,OAAO,SAASE,WAAW,CAAA,KAAA,EAAwC;EAAA,IAAA,SAAA,EAAA,qBAAA;EAAvC,IAAEC,OAAO,GAA4B,KAAA,CAAnCA,OAAO;IAAEC,QAAQ,GAAkB,KAAA,CAA1BA,QAAQ;IAAKJ,IAAAA,4BAAa,KAAA;EAC/D,IAAA,CAAA,SAAA,GAAIL,OAAO,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,GAAPA,SAAAA,CAASM,cAAc,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAAvBN,qBAAAA,CAAAA,IAAAA,CAAAA,SAAAA,CAA2B,EAAE;IAC/B,OACE,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,MAAM,EAAA,QAAA,CAAA;MAAC,aAAa,EAAEQ,OAAO,GAAG,CAAC,GAAG;IAAE,CAAA,EAAKH,IAAI,CAAA,EACrDI,QAAQ,CACM;EAErB;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,kBAAkB,EAAA,QAAA,CAAA;IAAC,OAAO,EAAED;EAAQ,CAAA,EAAKH,IAAI,CAAA,EAC3CI,QAAQ,CACU;AAEzB","sourceRoot":"../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { View } from 'react-native';\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\nexport const MaybeScreenContainer = _ref => {\n  var _Screens, _Screens$screensEnabl;\n  let {\n    enabled,\n    ...rest\n  } = _ref;\n  if ((_Screens = Screens) !== null && _Screens !== void 0 && (_Screens$screensEnabl = _Screens.screensEnabled) !== null && _Screens$screensEnabl !== void 0 && _Screens$screensEnabl.call(_Screens)) {\n    return /*#__PURE__*/React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\nexport function MaybeScreen(_ref2) {\n  var _Screens2, _Screens2$screensEnab;\n  let {\n    visible,\n    children,\n    ...rest\n  } = _ref2;\n  if ((_Screens2 = Screens) !== null && _Screens2 !== void 0 && (_Screens2$screensEnab = _Screens2.screensEnabled) !== null && _Screens2$screensEnab !== void 0 && _Screens2$screensEnab.call(_Screens2)) {\n    return /*#__PURE__*/React.createElement(Screens.Screen, _extends({\n      activityState: visible ? 2 : 0\n    }, rest), children);\n  }\n  return /*#__PURE__*/React.createElement(ResourceSavingView, _extends({\n    visible: visible\n  }, rest), children);\n}\n//# sourceMappingURL=ScreenFallback.js.map"]},"metadata":{},"sourceType":"module"}
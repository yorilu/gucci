{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isBase64(str) {\n  var regex = /^data:image\\/(?:gif|png|jpeg|bmp|webp)(?:;charset=utf-8)?;base64,(?:[A-Za-z0-9]|[+/])+={0,2}/;\n  return str && regex.test(str);\n}\nexport var SegmentedControlTab = function SegmentedControlTab(_ref) {\n  var onSelect = _ref.onSelect,\n    value = _ref.value,\n    enabled = _ref.enabled,\n    selected = _ref.selected,\n    tintColor = _ref.tintColor,\n    _ref$fontStyle = _ref.fontStyle,\n    fontStyle = _ref$fontStyle === void 0 ? {} : _ref$fontStyle,\n    _ref$activeFontStyle = _ref.activeFontStyle,\n    activeFontStyle = _ref$activeFontStyle === void 0 ? {} : _ref$activeFontStyle,\n    appearance = _ref.appearance;\n  var colorSchemeHook = useColorScheme();\n  var colorScheme = appearance || colorSchemeHook;\n  var textColor = fontStyle.color,\n    fontSize = fontStyle.fontSize,\n    fontFamily = fontStyle.fontFamily,\n    fontWeight = fontStyle.fontWeight;\n  var activeColor = activeFontStyle.color,\n    activeFontSize = activeFontStyle.fontSize,\n    activeFontFamily = activeFontStyle.fontFamily,\n    activeFontWeight = activeFontStyle.fontWeight;\n  var getColor = function getColor() {\n    if (textColor) {\n      return textColor;\n    }\n    if (tintColor) {\n      return 'white';\n    }\n    return colorScheme === 'dark' ? '#FFF' : '#000';\n  };\n  var color = getColor();\n  var activeStyle = _objectSpread(_objectSpread({}, styles.activeText), {}, {\n    fontFamily: activeFontFamily || fontFamily,\n    fontSize: activeFontSize || fontSize,\n    color: activeColor || color,\n    fontWeight: activeFontWeight || fontWeight || styles.activeText.fontWeight\n  });\n  var idleStyle = {\n    color: color,\n    fontSize: fontSize,\n    fontFamily: fontFamily,\n    fontWeight: fontWeight\n  };\n  return _jsx(TouchableOpacity, {\n    style: styles.container,\n    disabled: !enabled,\n    onPress: onSelect,\n    children: _jsx(View, {\n      style: [styles.default],\n      children: typeof value === 'number' || typeof value === 'object' ? _jsx(Image, {\n        source: value,\n        style: styles.segmentImage\n      }) : isBase64(value) ? _jsx(Image, {\n        source: {\n          uri: value\n        },\n        style: styles.segmentImage\n      }) : _jsx(Text, {\n        style: [idleStyle, selected && activeStyle],\n        children: value\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 5\n  },\n  default: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 2,\n    borderRadius: 5\n  },\n  activeText: {\n    fontWeight: '700'\n  },\n  segmentImage: {\n    width: 17,\n    height: 17,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"names":["React","isBase64","str","regex","test","SegmentedControlTab","onSelect","value","enabled","selected","tintColor","fontStyle","activeFontStyle","appearance","colorSchemeHook","useColorScheme","colorScheme","textColor","color","fontSize","fontFamily","fontWeight","activeColor","activeFontSize","activeFontFamily","activeFontWeight","getColor","activeStyle","styles","activeText","idleStyle","container","default","segmentImage","uri","StyleSheet","create","flex","borderRadius","justifyContent","alignItems","margin","width","height","resizeMode"],"sources":["/Users/yori/Documents/project/gucci/node_modules/@react-native-community/segmented-control/js/SegmentedControlTab.js"],"sourcesContent":["/**\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\n\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  useColorScheme,\n} from 'react-native';\n\nimport type {FontStyle} from './types';\n\ntype Props = $ReadOnly<{|\n  value: string | number | Object,\n  tintColor?: ?string,\n  onSelect: () => void,\n  selected: boolean,\n  enabled: boolean,\n  fontStyle?: FontStyle,\n  activeFontStyle?: FontStyle,\n  appearance?: 'dark' | 'light' | null,\n|}>;\n\nfunction isBase64(str) {\n  const regex = /^data:image\\/(?:gif|png|jpeg|bmp|webp)(?:;charset=utf-8)?;base64,(?:[A-Za-z0-9]|[+/])+={0,2}/;\n  return str && regex.test(str);\n}\n\nexport const SegmentedControlTab = ({\n  onSelect,\n  value,\n  enabled,\n  selected,\n  tintColor,\n  fontStyle = {},\n  activeFontStyle = {},\n  appearance,\n}: Props): React.Node => {\n  const colorSchemeHook = useColorScheme();\n  const colorScheme = appearance || colorSchemeHook;\n  const {color: textColor, fontSize, fontFamily, fontWeight} = fontStyle;\n\n  const {\n    color: activeColor,\n    fontSize: activeFontSize,\n    fontFamily: activeFontFamily,\n    fontWeight: activeFontWeight,\n  } = activeFontStyle;\n\n  const getColor = () => {\n    if (textColor) {\n      return textColor;\n    }\n    if (tintColor) {\n      return 'white';\n    }\n    return colorScheme === 'dark' ? '#FFF' : '#000';\n  };\n  const color = getColor();\n\n  const activeStyle = {\n    ...styles.activeText,\n    fontFamily: activeFontFamily || fontFamily,\n    fontSize: activeFontSize || fontSize,\n    color: activeColor || color,\n    fontWeight: activeFontWeight || fontWeight || styles.activeText.fontWeight,\n  };\n\n  const idleStyle = {\n    color,\n    fontSize: fontSize,\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n  };\n\n  return (\n    <TouchableOpacity\n      style={styles.container}\n      disabled={!enabled}\n      onPress={onSelect}>\n      <View style={[styles.default]}>\n        {typeof value === 'number' || typeof value === 'object' ? (\n          <Image source={value} style={styles.segmentImage} />\n        ) : isBase64(value) ? (\n          <Image source={{uri: value}} style={styles.segmentImage} />\n        ) : (\n          <Text style={[idleStyle, selected && activeStyle]}>{value}</Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {flex: 1, borderRadius: 5},\n  default: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 2,\n    borderRadius: 5,\n  },\n  activeText: {\n    fontWeight: '700',\n  },\n  segmentImage: {\n    width: 17,\n    height: 17,\n    resizeMode: 'contain',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
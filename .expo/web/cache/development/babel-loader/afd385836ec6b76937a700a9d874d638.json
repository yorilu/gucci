{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport IndexScreen from \"../screens/index/index\";\nimport MineScreen from \"../screens/mine/index\";\nimport WebViewScreen from \"../screens/webview/index\";\nimport AboutScreen from \"../screens/about/index\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var _ref$colorScheme = _ref.colorScheme,\n    colorScheme = _ref$colorScheme === void 0 ? 'light' : _ref$colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        title: '关于我们'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"WebView\",\n      component: WebViewScreen,\n      options: {\n        title: ''\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Index\",\n      component: IndexScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          headerStyle: {\n            height: 0\n          },\n          tabBarLabel: '首页',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"home\",\n              color: color,\n              size: 26\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Mine\",\n      component: MineScreen,\n      options: {\n        headerStyle: {\n          height: 0\n        },\n        tabBarLabel: '我的',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(AntDesign, {\n            name: \"user\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","AntDesign","createBottomTabNavigator","NavigationContainer","DefaultTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","IndexScreen","MineScreen","WebViewScreen","AboutScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","headerStyle","height","tabBarLabel","tabBarIcon","color","TabBarIcon","props","marginBottom"],"sources":["/Users/yori/Documents/project/gucci/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome, AntDesign, Entypo } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport IndexScreen from '../screens/index/index';\nimport MineScreen from '../screens/mine/index';\nimport WebViewScreen from '../screens/webview/index'\nimport AboutScreen from '../screens/about/index'\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n\n//theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\nexport default function Navigation({ colorScheme = 'light' }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"About\" component={AboutScreen} options={{ title: '关于我们' }} />\n      <Stack.Screen name=\"WebView\" component={WebViewScreen} options={{ title: '' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint\n      }}>\n      <BottomTab.Screen\n        name=\"Index\"\n        component={IndexScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          headerStyle: {\n            height: 0\n          },\n          tabBarLabel: '首页',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} size={26}/>,\n          // headerRight: () => (\n          //   <Pressable\n          //     onPress={() => navigation.navigate('Modal')}\n          //     style={({ pressed }) => ({\n          //       opacity: pressed ? 0.5 : 1,\n          //     })}>\n          //     <FontAwesome\n          //       name=\"info-circle\"\n          //       size={25}\n          //       color={Colors[colorScheme].text}\n          //       style={{ marginRight: 15 }}\n          //     />\n          //   </Pressable>\n          // ),\n        })}\n      />\n    {/*  <BottomTab.Screen\n        name=\"income\"\n        component={TabTwoScreen}\n        options={{\n          tabBarLabel: '我的收益',\n          tabBarIcon: ({ color }) => <AntDesign name=\"redenvelopes\" color={color} size={26}/>,\n        }}\n      />*/}\n    {/*  <BottomTab.Screen\n        name=\"话费订单\"\n        component={TabThreeScreen}\n        options={{\n          tabBarLabel: '话费订单',\n          tabBarIcon: ({ color }) => <Entypo name=\"list\" color={color} size={26}/>,\n        }}\n      />*/}\n      <BottomTab.Screen\n        name=\"Mine\"\n        component={MineScreen}\n        options={{\n          headerStyle: {\n            height: 0\n          },\n          tabBarLabel: '我的',\n          tabBarIcon: ({ color }) => <AntDesign name=\"user\" color={color}  size={26}/>,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
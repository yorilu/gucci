{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport { View } from \"../../components/Themed\";\nimport getModels from \"../../models/index\";\nimport getEnv from \"../../constants/ENV\";\nimport { useSelector } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Utils from \"../../utils/index\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getUrlWithHost = Utils.getUrlWithHost,\n  goWebView = Utils.goWebView;\nexport default function Index(props) {\n  var _props$position = props.position,\n    position = _props$position === void 0 ? 1 : _props$position,\n    navigation = props.navigation;\n  var _getEnv = getEnv(),\n    DIALOG_PIC_PATH = _getEnv.DIALOG_PIC_PATH;\n  var _useSelector = useSelector(function (state) {\n      return state.app;\n    }),\n    userInfo = _useSelector.userInfo,\n    mobile = _useSelector.mobile;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    dialogInfo = _useState2[0],\n    setDialogInfo = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showDialog = _useState4[0],\n    setShowDialog = _useState4[1];\n  var dialogImgUrl = DIALOG_PIC_PATH + dialogInfo.img || '';\n  useEffect(function () {\n    var init = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var userId = (userInfo == null ? void 0 : userInfo.id) || (yield AsyncStorage.getItem(\"TEMP_USER_ID\"));\n        if (!userId) {\n          userId = Math.floor(Math.random() * 1000000);\n          AsyncStorage.setItem(\"TEMP_USER_ID\", userId);\n        }\n        var advertInfo = yield getModels('advert').send({\n          user_id: userId,\n          position: position\n        }, {\n          method: \"GET\"\n        });\n        if ((advertInfo == null ? void 0 : advertInfo.code) == 0) {\n          setDialogInfo(advertInfo.result);\n          setShowDialog(true);\n        }\n      });\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    init();\n  }, []);\n  var onDialogClose = function onDialogClose() {\n    setShowDialog(false);\n  };\n  if (!showDialog) {\n    return _jsx(_Fragment, {});\n  }\n  return _jsxs(View, {\n    style: styles.modal,\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: onDialogClose,\n      children: _jsx(FontAwesome, {\n        style: styles.close,\n        name: \"close\",\n        size: 24,\n        color: \"black\"\n      })\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        setShowDialog(false);\n        goWebView({\n          uri: dialogInfo.url,\n          navigation: navigation\n        });\n      },\n      children: _jsx(Image, {\n        resizeMode: 'cover',\n        style: styles.img,\n        source: {\n          uri: dialogImgUrl\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","styles","View","getModels","getEnv","useSelector","AsyncStorage","FontAwesome","Utils","getUrlWithHost","goWebView","Index","props","position","navigation","DIALOG_PIC_PATH","state","app","userInfo","mobile","dialogInfo","setDialogInfo","showDialog","setShowDialog","dialogImgUrl","img","init","userId","id","getItem","Math","floor","random","setItem","advertInfo","send","user_id","method","code","result","onDialogClose","modal","close","uri","url"],"sources":["/Users/yori/Documents/project/gucci/components/Dialog/index.tsx"],"sourcesContent":["import { Image , ScrollView, Linking, RootTagContext, TouchableWithoutFeedback} from 'react-native';\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './styles'\n\nimport { Text, View} from '../../components/Themed';\nimport { RootTabScreenProps } from '../../types';\nimport getModels from '../../models/index'\nimport Icons from '../../constants/Icons';\nimport getEnv from '../../constants/ENV';\nimport { Button, Carousel } from '@ant-design/react-native';\nimport * as Location from 'expo-location';\nimport md5 from 'js-md5';\nimport $fetch from '../../utils/fetch';\nimport {setToken, setUserInfo} from '../../actions';\nimport { useDispatch, useSelector} from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { WebView } from 'react-native-webview';\nimport { initialWindowSafeAreaInsets } from 'react-native-safe-area-context';\nimport { AntDesign, FontAwesome } from '@expo/vector-icons'; \nimport Utils from '../../utils/index';\n\nconst { getUrlWithHost , goWebView} = Utils;\n\n\nexport default function Index(props) {\n\n  const {position = 1, navigation} = props;\n  const {DIALOG_PIC_PATH} = getEnv();\n  const {userInfo, mobile} = useSelector(state => state.app);\n  const [dialogInfo, setDialogInfo] = useState({});\n  const [showDialog, setShowDialog] = useState(false);\n  const dialogImgUrl = (DIALOG_PIC_PATH + dialogInfo.img) || '';\n\n  useEffect(()=>{\n    const init = async ()=>{\n      let userId = userInfo?.id || await AsyncStorage.getItem(\"TEMP_USER_ID\");\n      if(!userId){\n        userId = Math.floor(Math.random()*1000000);\n        AsyncStorage.setItem(\"TEMP_USER_ID\", userId);\n      }\n      const advertInfo = await getModels('advert').send({\n        user_id: userId,\n        position\n      },{\n        method: \"GET\"\n      })\n\n      if(advertInfo?.code ==0){\n        setDialogInfo(advertInfo.result);\n        setShowDialog(true);\n      }\n    }\n\n    init();\n  }, [])\n\n  const onDialogClose = ()=>{\n    setShowDialog(false);\n  }\n\n  if(!showDialog){\n    return (<></>)\n  }\n\n  return (\n    <View style={styles.modal}>\n      <TouchableWithoutFeedback onPress={onDialogClose}>\n        <FontAwesome style={styles.close} name=\"close\" size={24} color=\"black\" />\n      </TouchableWithoutFeedback>\n      <TouchableWithoutFeedback onPress={()=>{\n        setShowDialog(false);\n        goWebView({\n          uri: dialogInfo.url,\n          navigation\n        })\n      }}>\n        <Image\n          resizeMode={'cover'}\n          style={styles.img}\n          source={{uri:dialogImgUrl}}\n        />\n      </TouchableWithoutFeedback>\n\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
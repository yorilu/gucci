{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport styles from \"./styles\";\nimport { View } from \"../../components/Themed\";\nimport getEnv from \"../../constants/ENV\";\nimport WebView from \"../../components/WebView/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _getEnv = getEnv(),\n  assetsHost = _getEnv.assetsHost,\n  customerId = _getEnv.customerId;\nexport default function WebViewPage(_ref) {\n  var navigation = _ref.navigation,\n    _ref$route = _ref.route,\n    route = _ref$route === void 0 ? {} : _ref$route,\n    uri = _ref.uri;\n  uri = route.params.uri || uri;\n  return _jsx(View, {\n    style: styles.container,\n    style: {\n      flex: 1,\n      backgroundColor: '#F7F7F7'\n    },\n    children: _jsx(WebView, _objectSpread({\n      uri: uri,\n      navigation: navigation\n    }, route.params))\n  });\n}","map":{"version":3,"names":["React","styles","View","getEnv","WebView","assetsHost","customerId","WebViewPage","navigation","route","uri","params","container","flex","backgroundColor"],"sources":["/Users/yori/Documents/project/gucci/screens/webview/index.tsx"],"sourcesContent":["import { Image , ScrollView, Linking} from 'react-native';\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './styles'\n\nimport { Text, View} from '../../components/Themed';\nimport { RootTabScreenProps } from '../../types';\nimport getModels from '../../models/index'\nimport Icons from '../../constants/Icons';\nimport getEnv from '../../constants/ENV';\nimport { Button, Carousel } from '@ant-design/react-native';\n\nimport WebView from '../../components/WebView/index';\n\nconst {assetsHost, customerId} = getEnv();\n\nexport default function WebViewPage({ navigation, route = {}, uri}) {\n  uri = route.params.uri || uri;\n\n  // const [webViewCanGoBack , setWebViewCanGoBack] = useState(false);\n  // const [webViewHandler, setWebViewHandler] = useState(null);\n\n  // const onNavigationStateChange = (e)=>{\n  //   const {canGoBack} = e;\n  //   setWebViewCanGoBack(canGoBack);\n  //   console.log(\"onNavigationStateChange\", e, canGoBack);\n  // }\n\n  // const getHanler = (handler)=>{\n  //   setWebViewHandler(handler);\n  // }\n\n  // useEffect(() => {\n  //   const unsubscribe = navigation.addListener('beforeRemove', (e) => {\n  //     if(webViewCanGoBack){\n  //       webViewHandler && webViewHandler.goBack();\n  //       e.preventDefault();\n  //     }\n  //   });\n\n  //   return unsubscribe;\n  // }, [navigation]);\n\n  return (\n    <View style={styles.container} style={{ flex: 1, backgroundColor:'#F7F7F7' }}>\n      <WebView uri={uri}  navigation={navigation} {...route.params}></WebView>\n    </View>\n  );\n}\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAuC,OAAO;AAC1D,OAAOC,MAAM;AAEb,SAAeC,IAAI;AAInB,OAAOC,MAAM;AAGb,OAAOC,OAAO;AAAuC;AAErD,cAAiCD,MAAM,EAAE;EAAlCE,UAAU,WAAVA,UAAU;EAAEC,UAAU,WAAVA,UAAU;AAE7B,eAAe,SAASC,WAAW,OAAiC;EAAA,IAA9BC,UAAU,QAAVA,UAAU;IAAA,kBAAEC,KAAK;IAALA,KAAK,2BAAG,CAAC,CAAC;IAAEC,GAAG,QAAHA,GAAG;EAC/DA,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACD,GAAG,IAAIA,GAAG;EA0B7B,OACE,KAAC,IAAI;IAAC,KAAK,EAAET,MAAM,CAACW,SAAU;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,eAAe,EAAC;IAAU,CAAE;IAAA,UAC3E,KAAC,OAAO;MAAC,GAAG,EAAEJ,GAAI;MAAE,UAAU,EAAEF;IAAW,GAAKC,KAAK,CAACE,MAAM;EAAY,EACnE;AAEX"},"metadata":{},"sourceType":"module"}
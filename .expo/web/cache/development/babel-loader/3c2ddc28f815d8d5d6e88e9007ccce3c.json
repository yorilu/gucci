{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\", \"sceneContainerStyle\"],\n  _excluded2 = [\"lazy\", \"tabBarOptions\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\nimport BottomTabView from \"../views/BottomTabView\";\nfunction BottomTabNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    sceneContainerStyle = _ref.sceneContainerStyle,\n    restWithDeprecated = _objectWithoutProperties(_ref, _excluded);\n  var lazy = restWithDeprecated.lazy,\n    tabBarOptions = restWithDeprecated.tabBarOptions,\n    rest = _objectWithoutProperties(restWithDeprecated, _excluded2);\n  var defaultScreenOptions = {};\n  if (tabBarOptions) {\n    var _tabBarOptions$labelP;\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: (_tabBarOptions$labelP = tabBarOptions.labelPosition) != null ? _tabBarOptions$labelP : tabBarOptions.adaptive === false ? 'below-icon' : undefined,\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n    Object.keys(defaultScreenOptions).forEach(function (key) {\n      if (defaultScreenOptions[key] === undefined) {\n        delete defaultScreenOptions[key];\n      }\n    });\n    warnOnce(tabBarOptions, \"Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\" + JSON.stringify(defaultScreenOptions, null, 2) + \"\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.\");\n  }\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    warnOnce(true, \"Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.\");\n  }\n  var _useNavigationBuilder = useNavigationBuilder(TabRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      backBehavior: backBehavior,\n      children: children,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      defaultScreenOptions: defaultScreenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return React.createElement(NavigationContent, null, React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\nexport default createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"sources":["navigators/createBottomTabNavigator.tsx"],"names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","warnOnce","BottomTabView","BottomTabNavigator","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","restWithDeprecated","lazy","tabBarOptions","rest","defaultScreenOptions","Object","assign","tabBarHideOnKeyboard","keyboardHidesTabBar","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarActiveBackgroundColor","activeBackgroundColor","tabBarInactiveBackgroundColor","inactiveBackgroundColor","tabBarAllowFontScaling","allowFontScaling","tabBarShowLabel","showLabel","tabBarLabelStyle","labelStyle","tabBarIconStyle","iconStyle","tabBarItemStyle","tabStyle","tabBarLabelPosition","labelPosition","adaptive","undefined","tabBarStyle","display","tabBarVisible","keys","forEach","key","JSON","stringify","state","descriptors","navigation","NavigationContent"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SACEA,sBAAsB,EAKtBC,SAAS,EAETC,oBAAoB,QACf,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,WAAW;AAOhC,OAAOC,aAAa;AAWpB,SAASC,kBAAkB,CAAA,IAAA,EASjB;EATkB,IAC1BC,EAAE,GAQI,IAAA,CARNA,EAAE;IACFC,gBAAgB,GAOV,IAAA,CAPNA,gBAAgB;IAChBC,YAAY,GAMN,IAAA,CANNA,YAAY;IACZC,QAAQ,GAKF,IAAA,CALNA,QAAQ;IACRC,eAAe,GAIT,IAAA,CAJNA,eAAe;IACfC,aAAa,GAGP,IAAA,CAHNA,aAAa;IACbC,mBAAmB,GAEb,IAAA,CAFNA,mBAAmB;IAChBC,kBAAAA,4BACG,IAAA;EACN,IAEEC,IAAI,GAIFD,kBAAkB,CAJpBC,IAAI;IAEJC,aAAa,GAEXF,kBAAkB,CAFpBE,aAAa;IACVC,IAAAA,4BACDH,kBAAkB;EAEtB,IAAII,oBAAgD,GAAG,CAAC,CAAC;EAEzD,IAAIF,aAAa,EAAE;IAAA;IACjBG,MAAM,CAACC,MAAM,CAACF,oBAAoB,EAAE;MAClCG,oBAAoB,EAAEL,aAAa,CAACM,mBAAmB;MACvDC,qBAAqB,EAAEP,aAAa,CAACQ,eAAe;MACpDC,uBAAuB,EAAET,aAAa,CAACU,iBAAiB;MACxDC,2BAA2B,EAAEX,aAAa,CAACY,qBAAqB;MAChEC,6BAA6B,EAAEb,aAAa,CAACc,uBAAuB;MACpEC,sBAAsB,EAAEf,aAAa,CAACgB,gBAAgB;MACtDC,eAAe,EAAEjB,aAAa,CAACkB,SAAS;MACxCC,gBAAgB,EAAEnB,aAAa,CAACoB,UAAU;MAC1CC,eAAe,EAAErB,aAAa,CAACsB,SAAS;MACxCC,eAAe,EAAEvB,aAAa,CAACwB,QAAQ;MACvCC,mBAAmB,2BACjBzB,aAAa,CAAC0B,aAAa,oCAC1B1B,aAAa,CAAC2B,QAAQ,KAAK,KAAK,GAAG,YAAY,GAAGC,SAAU;MAC/DC,WAAW,EAAE,CACX;QAAEC,OAAO,EAAE9B,aAAa,CAAC+B,aAAa,GAAG,MAAM,GAAG;MAAO,CAAC,EAC1D7B,oBAAoB,CAAC2B,WAAW;IAEpC,CAAC,CAAC;IAGA1B,MAAM,CAAC6B,IAAI,CAAC9B,oBAAoB,CAAC,CACjC+B,OAAO,CAAEC,UAAAA,GAAG,EAAK;MACjB,IAAIhC,oBAAoB,CAACgC,GAAG,CAAC,KAAKN,SAAS,EAAE;QAE3C,OAAO1B,oBAAoB,CAACgC,GAAG,CAAC;MAClC;IACF,CAAC,CAAC;IAEF9C,QAAQ,CACNY,aAAa,gMAC+KmC,IAAI,CAACC,SAAS,CACxMlC,oBAAoB,EACpB,IAAI,EACJ,CAAC,CACD,6FACH;EACH;EAEA,IAAI,OAAOH,IAAI,KAAK,SAAS,EAAE;IAC7BG,oBAAoB,CAACH,IAAI,GAAGA,IAAI;IAEhCX,QAAQ,CACN,IAAI,kLAEL;EACH;EAEA,4BACEF,oBAAoB,CAMlBD,SAAS,EAAE;MACXM,EAAE,EAAFA,EAAE;MACFC,gBAAgB,EAAhBA,gBAAgB;MAChBC,YAAY,EAAZA,YAAY;MACZC,QAAQ,EAARA,QAAQ;MACRC,eAAe,EAAfA,eAAe;MACfC,aAAa,EAAbA,aAAa;MACbM,oBAAAA,EAAAA;IACF,CAAC,CAAC;IAfImC,KAAK,yBAALA,KAAK;IAAEC,WAAW,yBAAXA,WAAW;IAAEC,UAAU,yBAAVA,UAAU;IAAEC,iBAAAA,yBAAAA,iBAAAA;EAiBxC,OACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,IAAA,EAChB,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,QAAA,CAAA,CAAA,CAAA,EACRvC,IAAI,EAAA;IACR,KAAK,EAAEoC,KAAM;IACb,UAAU,EAAEE,UAAW;IACvB,WAAW,EAAED,WAAY;IACzB,mBAAmB,EAAEzC;EAAoB,CAAA,CAAA,CACzC,CACgB;AAExB;AAEA,eAAeb,sBAAsB,CAKnCM,kBAAkB,CAAC","sourceRoot":"../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\nimport BottomTabView from '../views/BottomTabView';\nfunction BottomTabNavigator(_ref) {\n  let {\n    id,\n    initialRouteName,\n    backBehavior,\n    children,\n    screenListeners,\n    screenOptions,\n    sceneContainerStyle,\n    ...restWithDeprecated\n  } = _ref;\n  const {\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n  let defaultScreenOptions = {};\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: tabBarOptions.labelPosition ?? (tabBarOptions.adaptive === false ? 'below-icon' : undefined),\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n    Object.keys(defaultScreenOptions).forEach(key => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n    warnOnce(tabBarOptions, `Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(defaultScreenOptions, null, 2)}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`);\n  }\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    warnOnce(true, `Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`);\n  }\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(TabRouter, {\n    id,\n    initialRouteName,\n    backBehavior,\n    children,\n    screenListeners,\n    screenOptions,\n    defaultScreenOptions\n  });\n  return /*#__PURE__*/React.createElement(NavigationContent, null, /*#__PURE__*/React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\nexport default createNavigatorFactory(BottomTabNavigator);\n//# sourceMappingURL=createBottomTabNavigator.js.map"]},"metadata":{},"sourceType":"module"}